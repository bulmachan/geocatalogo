<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.rer.sgss</groupId>
		<artifactId>commonapp</artifactId>
		<version>1.0</version>
		<relativePath>../commonapp/pom.xml</relativePath>
	</parent>

	<groupId>com.rer.sgss</groupId>
	<artifactId>geocatalogo</artifactId>
	<packaging>war</packaging>
	<version>1.0.1-SNAPSHOT</version>
	<name>Geocatalogo</name>
	<description>Il Catalogo dei Dati Geografici consente la consultazione dei dati geografici 
	del Servizio Geologico, Sismico e dei Suoli (SGSS).</description>
	<url>https://redmine.ente.regione.emr.it/projects/geocatalogo</url>
	<developers>
	    <developer>
            <name>Franscesco Marucci</name>
            <url></url>
            <organization>RER</organization>
            <organizationUrl>http://www.regione.emilia-romagna.it/</organizationUrl>
        </developer>
        <developer>
            <name>Marica Landini</name>
            <url></url>
            <organization>RER</organization>
            <organizationUrl>http://www.regione.emilia-romagna.it/</organizationUrl>
        </developer>
    </developers>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- default env.properties !-->
		<env.properties>prod</env.properties>
	</properties>

	<dependencies>
		<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
		<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
	
		<profile>
			<id>test</id>
			<properties>
				<env.properties>prod</env.properties>
			</properties>
			<build>
				<resources>
					<resource>
					<directory>src/main/resources</directory>
					<filtering>true</filtering>
					</resource>
				</resources>
				<finalName>${project.artifactId}-${project.version}-${env.properties}</finalName>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
						<version>2.2.1</version>
					   <!--
							 Ensure that the revision goal is invoked during the initialize
							 phase.
						-->
						<executions>
							<execution>
								<goals>
									<goal>revision</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!--
								Configure the location of the .git directory.
							-->
							<dotGitDirectory>.git</dotGitDirectory>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<archive>
								<manifest>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
								<manifestEntries>
									<git-sha1-short>${git.commit.id.describe-short}</git-sha1-short>
									<git-commit-message>${git.commit.message.full}</git-commit-message>
									<env-properties>${env.properties}</env-properties>
									<git-commit-username>${git.commit.user.name}</git-commit-username>
									<git-commit-time>${git.commit.time}</git-commit-time>
									<git-build-username>${git.build.user.name}</git-build-username>
									<git-build-time>${git.build.time}</git-build-time>							
								</manifestEntries>
							</archive>
							<webResources>
								<webResource>
									<directory>src/main/webapp</directory>
									<filtering>true</filtering>
								</webResource>
							</webResources>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<target>
										<copy file="${project.build.directory}/${project.artifactId}-${project.version}-${env.properties}.war" tofile="/mnt/condivisa/jboss_deploy/${project.artifactId}-${project.version}-${env.properties}.war" overwrite="true"/>
										<echo message="Copying file  /mnt/condivisa/jboss_deploy/${project.artifactId}-${project.version}-${env.properties}.war "/>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<env.properties>prod</env.properties>
			</properties>
			<build>
				<resources>
					<resource>
					<directory>src/main/resources</directory>
					<filtering>true</filtering>
					</resource>
				</resources>
				<finalName>${project.artifactId}-${project.version}-${env.properties}</finalName>
				<plugins>
					<plugin>
						<groupId>pl.project13.maven</groupId>
						<artifactId>git-commit-id-plugin</artifactId>
						<version>2.2.1</version>
					   <!--
							 Ensure that the revision goal is invoked during the initialize
							 phase.
						-->
						<executions>
							<execution>
								<goals>
									<goal>revision</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!--
								Configure the location of the .git directory.
							-->
							<dotGitDirectory>.git</dotGitDirectory>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<archive>
								<manifest>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
								<manifestEntries>
									<git-sha1-short>${git.commit.id.describe-short}</git-sha1-short>
									<git-commit-message>${git.commit.message.full}</git-commit-message>
									<env-properties>${env.properties}</env-properties>
									<git-commit-username>${git.commit.user.name}</git-commit-username>
									<git-commit-time>${git.commit.time}</git-commit-time>
									<git-build-username>${git.build.user.name}</git-build-username>
									<git-build-time>${git.build.time}</git-build-time>							
								</manifestEntries>
							</archive>
							<webResources>
								<webResource>
									<directory>src/main/webapp</directory>
									<filtering>true</filtering>
								</webResource>
							</webResources>
						</configuration>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<target>
										<copy file="${project.build.directory}/${project.artifactId}-${project.version}-${env.properties}.war" tofile="/mnt/condivisa/jboss_deploy/${project.artifactId}-${project.version}-${env.properties}.war" overwrite="true"/>
										<echo message="Copying file  /mnt/condivisa/jboss_deploy/${project.artifactId}-${project.version}-${env.properties}.war "/>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
</profiles>  

	<build>
	</build>
</project>
